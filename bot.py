import discord
import joblib
import os
import random

print("üî• –ë–æ—Ç —Å—Ç–∞—Ä—Ç—É–µ—Ç...")

TOKEN = os.getenv("DISCORD_TOKEN")

model = joblib.load("toxic_classifier.pkl")
vectorizer = joblib.load("tfidf_vectorizer.pkl")

intents = discord.Intents.default()
intents.message_content = True

client = discord.Client(intents=intents)

insults = [
    "—Ç—ã —á—Ç–æ, —Å–æ–≤—Å–µ–º? –ø–æ–¥—É–º–∞–π, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø–∏—Å–∞—Ç—å.",
    "–∑–∞–≤–∞–ª–∏ —Ö–ª–µ–±–∞–ª–æ, —Ç–æ–∫—Å–∏–∫.",
    "–ø–æ–º–µ–Ω—å—à–µ –≥–æ–≤–Ω–∞ ‚Äî –ø–æ–±–æ–ª—å—à–µ —Å–º—ã—Å–ª–∞.",
    "–ø–∏–∑–¥—É–π —Å —Ç–∞–∫–æ–π —Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç—å—é –æ—Ç—Å—é–¥–∞.",
    "—Ç—ã –≤ –±–∞–Ω—é —Å–æ–±—Ä–∞–ª—Å—è, –∞ –Ω–µ –≤ –¥–∏–∞–ª–æ–≥.",
]

@client.event
async def on_ready():
    print(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {client.user}")

@client.event
async def on_message(message):
    if message.author == client.user:
        return

    if client.user in message.mentions or message.content.startswith("!tox "):
        if message.content.startswith("!tox "):
            text = message.content[5:]
        else:
            text = message.content.replace(f"<@{client.user.id}>", "").replace(f"<@!{client.user.id}>", "").strip()

        X = vectorizer.transform([text])
        pred = model.predict(X)[0]

        if pred == 1:
            response = random.choice(insults)
            await message.reply(f"‚ö†Ô∏è {response}")
        else:
            await message.reply("üëç")

try:
    client.run(TOKEN)
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
